
import json
from logging import Logger
import os

class Test_Config_Has_Group_Confirmation():
    def test_config_group(self):
        list_of_config_files = self._get_list_of_files("config.json")
        for file in list_of_config_files:
            self._confirm_group_exist(json.loads(file))
            
    def _confirm_group_exist(self, config_json):
        if("connection" in config_json and "type" in config_json["connection"] and "type" in config_json["connection"]["type"]):
            #Ignore the base config.json
            assert True
            return
        if ("connection" in config_json and "type" in config_json["connection"]):
            assert "group" in config_json["connection"]["type"]
            assert config_json["connection"]["type"]["group"] != None
            assert config_json["connection"]["type"]["group"] != ""
                
    def _get_list_of_files(self, file_name):
        #Generated by WCA for GP
        #Here's an example of how you can do this in Python using the os module:

        # Define the directory path
        directory_path = os.getcwd() + "/stix_shifter_modules"
        lang_en_file_list = list()
        
        # Iterate through all the child directories
        for dir_name, subdir_list, file_list in os.walk(directory_path):
            # Check if the file exists in the current directory
            if file_name in file_list:
                # Open the file and read its contents
                with open(os.path.join(dir_name, file_name), 'r') as file:
                    lang_en_file_list.append(file.read())
        return lang_en_file_list
            
            
             
