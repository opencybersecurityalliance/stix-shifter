# Generated by WCA for GP
import argparse
import json
import os
import pandas as pd

# Create an argument parser
parser = argparse.ArgumentParser()

# Add an argument for the input file
parser.add_argument('--input', type=str, required=True, help='Input file path')

# Parse the arguments
args = parser.parse_args()

# Read the JSON file
with open(os.path.join(args.input), 'r') as f:
    data = json.load(f)

# Convert the JSON data to a Pandas DataFrame
df = pd.DataFrame(data["connection"])

print(df)

df = df.dropna(subset="connection")


list_of_keys = list()
list_of_key_values = dict()
for value in df.get("connection"):
    for key in value:
        if(key not in list_of_keys):
            list_of_keys.append(key)

for value in df.get("connection"):
    for key in list_of_keys:  
        if(key in value):
            if (key not in list_of_key_values):
                list_of_key_values[key] = [value[key]]
            else:
                list_of_key_values[key].append(value[key])
        else:
            if (key not in list_of_key_values):
                list_of_key_values[key] = [None]
            else:
                list_of_key_values[key].append(None)

print(df.axes)
# df = df.drop([0], axis=)


for key,rows in list_of_key_values.items():  
    print(df)
    df = df.insert(loc=len(df.columns), column=key, value=[1,2,3,4,5,6,7,8,9,10,11])
    
# Print the DataFrame
print(df)